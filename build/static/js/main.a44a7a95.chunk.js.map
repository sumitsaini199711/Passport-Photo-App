{"version":3,"sources":["logo.svg","Upload.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","props","state","files","result","ifPerson","fileUpload","bind","this","setState","console","log","a","photo","base64OfImage","split","fetch","method","headers","Accept","body","JSON","stringify","response","json","undefined","parse","className","multiple","onDone","getFiles","src","base64","width","Button","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,+GC+FAA,EA3Ff,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,GACRC,SAAU,IAGZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBARD,EADrB,4CAYE,SAASJ,GACPK,KAAKC,SAAS,CACZN,MAAOA,IAGTO,QAAQC,IAAIH,KAAKN,MAAMC,SAjB3B,+DAoBE,kCAAAS,EAAA,6DACQC,EAAQL,KAAKN,MAAMC,MAAX,OACRW,EAAgBD,EAAME,MAAM,KAAK,GAFzC,SAGyBC,MACrB,4EACA,CACEC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAET,MAAOC,MAXpC,cAGQS,EAHR,gBAeuBA,EAASC,OAfhC,OAeQpB,EAfR,OAgBEI,KAAKC,SAAS,CAAEL,OAAQA,EAAOgB,YAIQK,IAFlBJ,KAAKK,MAAMlB,KAAKN,MAAME,QAE3B,YAAgB,GAC9BI,KAAKC,SAAS,CACZJ,SAAU,0DAGZG,KAAKC,SAAS,CAAEJ,SAAU,qCAzB9B,iDApBF,0EAgDE,WACE,IAAMA,EAAWG,KAAKN,MAAMG,SAC5B,OACE,gCACE,qBAAKsB,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,8DAIJ,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,IAAD,CAAYC,UAAU,EAAOC,OAAQrB,KAAKsB,SAASvB,KAAKC,YAI5D,qBAAKmB,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKI,IAAKvB,KAAKN,MAAMC,MAAM6B,OAAQC,MAAM,YAI7C,qBAAKN,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,iCAAStB,QAIb,qBAAKsB,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAACO,EAAA,EAAD,CACEP,UAAU,kCACVQ,QAAS3B,KAAKF,WAFhB,qCA9EZ,GAA4B8B,aCSbC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a44a7a95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup } from \"reactstrap\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport \"./Upload.css\";\r\nexport class Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: [],\r\n      result: [],\r\n      ifPerson: \"\",\r\n    };\r\n\r\n    this.fileUpload = this.fileUpload.bind(this);\r\n  }\r\n\r\n  getFiles(files) {\r\n    this.setState({\r\n      files: files,\r\n    });\r\n\r\n    console.log(this.state.files);\r\n  }\r\n\r\n  async fileUpload() {\r\n    const photo = this.state.files[\"base64\"];\r\n    const base64OfImage = photo.split(\",\")[1];\r\n    const response = await fetch(\r\n      \"https://6tux3pbm47.execute-api.us-east-1.amazonaws.com/Prod/passportphoto\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ photo: base64OfImage }),\r\n      }\r\n    );\r\n\r\n    const result = await response.json();\r\n    this.setState({ result: result.body });\r\n\r\n    const face_details = JSON.parse(this.state.result);\r\n\r\n    if (face_details[\"FaceDetails\"][0] === undefined) {\r\n      this.setState({\r\n        ifPerson: \"Sorry, Looks like you just uploaded an invalid photo!\",\r\n      });\r\n    } else {\r\n      this.setState({ ifPerson: \"Thanks for uploading your photo!\" });\r\n    }\r\n  }\r\n  render() {\r\n    const ifPerson = this.state.ifPerson;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <h4>Passport Photo Validator</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3 files\">\r\n            <FileBase64 multiple={false} onDone={this.getFiles.bind(this)} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <img src={this.state.files.base64} width=\"40%\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <strong>{ifPerson}</strong>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <Button\r\n              className=\"btn btn-lg btn-danger btn-block\"\r\n              onClick={this.fileUpload}\r\n            >\r\n              Verify Photo\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Upload from \"./Upload\";\n\nfunction App() {\n  return (\n    <div>\n      <Upload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}